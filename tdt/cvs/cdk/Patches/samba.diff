--- samba-3.0.25b/source/client/mount.cifs.c	2007-05-23 17:29:19.000000000 +0200
+++ samba-3.0.25b/source/client/mount.cifs.c-new	2007-07-14 13:40:30.000000000 +0200
@@ -38,6 +38,7 @@
 #include <string.h>
 #include <mntent.h>
 #include <fcntl.h>
+#include <linux/limits.h>
 
 #define MOUNT_CIFS_VERSION_MAJOR "1"
 #define MOUNT_CIFS_VERSION_MINOR "10"
--- samba-3.0.25b/source/lib/sysquotas_4A.c	2005-09-29 23:52:43.000000000 +0200
+++ samba-3.0.25b/source/lib/sysquotas_4A.c-new	2007-07-14 13:42:31.000000000 +0200
@@ -34,6 +34,8 @@
 /* long quotactl(int cmd, char *special, qid_t id, caddr_t addr) */
 /* this is used by: HPUX,IRIX */
 
+#define _LINUX_QUOTA_VERSION 1
+
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
--- samba-3.0.25b/source/lib/replace/replace.c	2007-04-21 03:48:08.000000000 +0200
+++ samba-3.0.25b/source/lib/replace/replace.c-new	2007-07-14 14:26:20.000000000 +0200
@@ -416,7 +416,7 @@
 {
 	/* have a reasonable go at emulating it. Hope that
 	   the system mktemp() isn't completly hopeless */
-	char *p = mktemp(template);
+	char *p = mkstemp(template);
 	if (!p)
 		return -1;
 	return open(p, O_CREAT|O_EXCL|O_RDWR, 0600);
@@ -428,7 +428,7 @@
 {
 	char *dname;
 	
-	if ((dname = mktemp(template))) {
+	if ((dname = mkstemp(template))) {
 		if (mkdir(dname, 0700) >= 0) {
 			return dname;
 		}
--- samba-3.0.25b/source/lib/util.c	2007-05-11 00:09:35.000000000 +0200
+++ samba-3.0.25b/source/lib/util.c-new	2007-07-14 15:06:28.000000000 +0200
@@ -2432,7 +2432,7 @@
 #else
 	/* have a reasonable go at emulating it. Hope that
 	   the system mktemp() isn't completly hopeless */
-	char *p = mktemp(name_template);
+	char *p = mkstemp(name_template);
 	if (!p)
 		return -1;
 	return open(p, O_CREAT|O_EXCL|O_RDWR, 0600);
--- samba-3.0.25b/source/Makefile.in	2007-06-19 19:11:39.000000000 +0200
+++ samba-3.0.25b/source/Makefile.in-new	2007-07-21 07:38:15.000000000 +0200
@@ -1625,15 +1625,15 @@
 	@$(SHELL) $(srcdir)/script/installdirs.sh $(INSTALLPERMS) $(DESTDIR) $(LIBDIR)
 	-$(INSTALLLIBCMD_SH) bin/libsmbclient.@SHLIBEXT@ $(DESTDIR)$(LIBDIR)
 	-$(INSTALLLIBCMD_A) bin/libsmbclient.a $(DESTDIR)$(LIBDIR)
-	@$(SHELL) $(srcdir)/script/installdirs.sh $(INSTALLPERMS) $(DESTDIR) ${prefix}/include
-	-$(INSTALLCMD) $(srcdir)/include/libsmbclient.h $(DESTDIR)${prefix}/include
+	@$(SHELL) $(srcdir)/script/installdirs.sh $(INSTALLPERMS) $(DESTDIR) ${prefix}/usr/include
+	-$(INSTALLCMD) $(srcdir)/include/libsmbclient.h $(DESTDIR)${prefix}/usr/include
 
 installlibmsrpc: installdirs libmsrpc
 	@$(SHELL) $(srcdir)/script/installdirs.sh $(INSTALLPERMS) $(DESTDIR) $(LIBDIR)
 	-$(INSTALLLIBCMD_SH) bin/libmsrpc.@SHLIBEXT@ $(DESTDIR)$(LIBDIR)
 	-$(INSTALLLIBCMD_A) bin/libmsrpc.a $(DESTDIR)$(LIBDIR)
-	@$(SHELL) $(srcdir)/script/installdirs.sh $(INSTALLPERMS) $(DESTDIR) ${prefix}/include
-	-$(INSTALLCMD) $(srcdir)/include/libmsrpc.h $(DESTDIR)${prefix}/include
+	@$(SHELL) $(srcdir)/script/installdirs.sh $(INSTALLPERMS) $(DESTDIR) ${prefix}/usr/include
+	-$(INSTALLCMD) $(srcdir)/include/libmsrpc.h $(DESTDIR)${prefix}/usr/include
 
 installlibsmbsharemodes: installdirs libsmbsharemodes
 	@$(SHELL) $(srcdir)/script/installdirs.sh $(INSTALLPERMS) $(DESTDIR) $(LIBDIR)
--- samba-3.0.25b/source/configure.in	2007-05-23 17:29:20.000000000 +0200
+++ samba-3.0.25b/source/configure.in-new	2007-07-21 10:28:46.000000000 +0200
@@ -511,38 +511,6 @@
    AC_DEFINE(HAVE_VOLATILE, 1, [Whether the C compiler understands volatile])
 fi
 
-############################################
-# check if the compiler can handle negative enum values
-# and don't truncate the values to INT_MAX
-# a runtime test is needed here
-AC_SUBST(PIDL_ARGS)
-AC_CACHE_CHECK([that the C compiler understands negative enum values],SMB_BUILD_CC_NEGATIVE_ENUM_VALUES, [
-    AC_TRY_RUN(
-[
-	#include <stdio.h>
-	enum negative_values { NEGATIVE_VALUE = 0xFFFFFFFF };
-	int main(void) {
-		enum negative_values v1 = NEGATIVE_VALUE;
-		unsigned v2 = NEGATIVE_VALUE;
-
-		if (v1 != 0xFFFFFFFF) {
-			printf("%u != 0xFFFFFFFF\n", v1);
-			return 1;
-		}
-		if (v2 != 0xFFFFFFFF) {
-			printf("%u != 0xFFFFFFFF\n", v2);
-			return 1;
-		}
-
-		return 0;
-	}
-],
-	SMB_BUILD_CC_NEGATIVE_ENUM_VALUES=yes,SMB_BUILD_CC_NEGATIVE_ENUM_VALUES=no)])
-if test x"$SMB_BUILD_CC_NEGATIVE_ENUM_VALUES" != x"yes"; then
-	AC_MSG_WARN([using --unit-enums for pidl])
-	PIDL_ARGS="$PIDL_ARGS --uint-enums"
-fi
-
 dnl Figure out the flags to support named structure initializers
 
 LIBREPLACE_C99_STRUCT_INIT([],[AC_MSG_ERROR([c99 structure initializer are not supported])])
@@ -754,7 +722,7 @@
 # Tests for linux LFS support. Need kernel 2.4 and glibc2.2 or greater support.
 #
     *linux*)
-        AC_MSG_CHECKING([for LFS support])
+        AC_CACHE_CHECK([for LFS support], samba_cv_LINUX_LFS_SUPPORT,[
         old_CPPFLAGS="$CPPFLAGS"
         CPPFLAGS="-D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE $CPPFLAGS"
        AC_TRY_RUN([
@@ -793,10 +761,11 @@
        exit(1);
 #endif
 }
-], [LINUX_LFS_SUPPORT=yes], [LINUX_LFS_SUPPORT=no], [LINUX_LFS_SUPPORT=cross])
-	CPPFLAGS="$old_CPPFLAGS"
-	if test x$LINUX_LFS_SUPPORT = xyes ; then
-		CPPFLAGS="-D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE $CPPFLAGS"
+], [samba_cv_LINUX_LFS_SUPPORT=yes], [samba_cv_LINUX_LFS_SUPPORT=no], [samba_cv_LINUX_LFS_SUPPORT=cross])
+	CPPFLAGS="$old_CPPFLAGS"])
+	if test x"$samba_cv_LINUX_LFS_SUPPORT" = x"yes" -o x"$samba_cv_LINUX_LFS_SUPPORT" = x"cross"; then
+		CPPFLAGS="-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE $CPPFLAGS"
+		AC_DEFINE(_LARGEFILE_SOURCE, 1, [Whether to enable large file support 32])
 		AC_DEFINE(_LARGEFILE64_SOURCE, 1, [Whether to enable large file support])
 		AC_DEFINE(_FILE_OFFSET_BITS, 64, [File offset bits])
 		AC_DEFINE(_GNU_SOURCE, 1, [Whether to use GNU libc extensions])
@@ -1372,34 +1341,6 @@
 #
 #
 #
-case "$host_os" in
-    *linux*)
-       # glibc <= 2.3.2 has a broken getgrouplist
-       AC_TRY_RUN([
-#include <unistd.h>
-#include <sys/utsname.h>
-main() {
-       /* glibc up to 2.3 has a broken getgrouplist */
-#if defined(__GLIBC__) && defined(__GLIBC_MINOR__)
-       int libc_major = __GLIBC__;
-       int libc_minor = __GLIBC_MINOR__;
-
-       if (libc_major < 2)
-              exit(1);
-       if ((libc_major == 2) && (libc_minor <= 3))
-              exit(1);
-#endif
-       exit(0);
-}
-], [linux_getgrouplist_ok=yes], [linux_getgrouplist_ok=no])
-       if test x"$linux_getgrouplist_ok" = x"yes"; then
-          AC_DEFINE(HAVE_GETGROUPLIST, 1, [Have good getgrouplist])
-       fi
-       ;;
-    *)
-       AC_CHECK_FUNCS(getgrouplist)
-       ;;
-esac
 
 #
 # stat64 family may need <sys/stat.h> on some systems, notably ReliantUNIX
@@ -2502,6 +2443,9 @@
 if test x"$samba_cv_HAVE_KERNEL_OPLOCKS_LINUX" = x"yes"; then
     AC_DEFINE(HAVE_KERNEL_OPLOCKS_LINUX,1,[Whether to use linux kernel oplocks])
 fi
+if test x"$samba_cv_HAVE_KERNEL_OPLOCKS_LINUX" = x"cross"; then
+    AC_DEFINE(HAVE_KERNEL_OPLOCKS_LINUX,1,[Whether to use linux kernel oplocks])
+fi
 
 AC_CACHE_CHECK([for kernel change notify support],samba_cv_HAVE_KERNEL_CHANGE_NOTIFY,[
 AC_TRY_RUN([
