diff -Nur flac-1.2.1/examples/cpp/encode/file/main.cpp.org flac-1.2.1/examples/cpp/encode/file/main.cpp
--- flac-1.2.1/examples/cpp/encode/file/main.cpp.org	2007-09-13 08:58:03.000000000 -0700
+++ flac-1.2.1/examples/cpp/encode/file/main.cpp	2011-10-19 04:28:33.000000000 -0700
@@ -28,6 +28,7 @@
 #  include <config.h>
 #endif
 
+#include <string.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include "FLAC++/metadata.h"
diff -Nur flac-1.2.1/src/libFLAC/bitreader.c.org flac-1.2.1/src/libFLAC/bitreader.c
--- flac-1.2.1/src/libFLAC/bitreader.c.org	2007-09-10 21:48:55.000000000 -0700
+++ flac-1.2.1/src/libFLAC/bitreader.c	2011-10-19 04:36:22.858078947 -0700
@@ -66,7 +66,7 @@
 #ifdef _MSC_VER
 #define SWAP_BE_WORD_TO_HOST(x) local_swap32_(x)
 #else
-#define SWAP_BE_WORD_TO_HOST(x) ntohl(x)
+#define SWAP_BE_WORD_TO_HOST(x) local_swap32_(x)
 #endif
 #endif
 /* counts the # of zero MSBs in a word */
@@ -149,31 +131,11 @@
 	FLAC__CPUInfo cpu_info;
 };
 
-#ifdef _MSC_VER
-/* OPT: an MSVC built-in would be better */
-static _inline FLAC__uint32 local_swap32_(FLAC__uint32 x)
+static FLaC__INLINE unsigned local_swap32_(unsigned x)
 {
 	x = ((x<<8)&0xFF00FF00) | ((x>>8)&0x00FF00FF);
 	return (x>>16) | (x<<16);
 }
-static void local_swap32_block_(FLAC__uint32 *start, FLAC__uint32 len)
-{
-	__asm {
-		mov edx, start
-		mov ecx, len
-		test ecx, ecx
-loop1:
-		jz done1
-		mov eax, [edx]
-		bswap eax
-		mov [edx], eax
-		add edx, 4
-		dec ecx
-		jmp short loop1
-done1:
-	}
-}
-#endif
 
 static FLaC__INLINE void crc16_update_word_(FLAC__BitReader *br, brword word)
 {
diff -Nur flac-1.2.1/src/libFLAC/bitwriter.c.org flac-1.2.1/src/libFLAC/bitwriter.c
--- flac-1.2.1/src/libFLAC/bitwriter.c.org	2007-09-10 16:08:38.000000000 -0700
+++ flac-1.2.1/src/libFLAC/bitwriter.c	2011-10-19 04:27:23.000000000 -0700
@@ -66,7 +66,7 @@
 #ifdef _MSC_VER
 #define SWAP_BE_WORD_TO_HOST(x) local_swap32_(x)
 #else
-#define SWAP_BE_WORD_TO_HOST(x) ntohl(x)
+#define SWAP_BE_WORD_TO_HOST(x) local_swap32_(x)
 #endif
 #endif
 
@@ -107,14 +107,11 @@
 	unsigned bits; /* # of used bits in accum */
 };
 
-#ifdef _MSC_VER
-/* OPT: an MSVC built-in would be better */
-static _inline FLAC__uint32 local_swap32_(FLAC__uint32 x)
+static FLaC__INLINE unsigned local_swap32_(unsigned x)
 {
 	x = ((x<<8)&0xFF00FF00) | ((x>>8)&0x00FF00FF);
 	return (x>>16) | (x<<16);
 }
-#endif
 
 /* * WATCHOUT: The current implementation only grows the buffer. */
 static FLAC__bool bitwriter_grow_(FLAC__BitWriter *bw, unsigned bits_to_add)

